{"version":3,"sources":["views/Loading/Loading.js","assets/img/btn_my.png","utils/general.js","utils/global.js","assets/img/btn_main.png","views/Main/Main.js"],"names":["LoadingComponent","props","state","dirIndex","window","this","anima","setInterval","setState","changePage","toggleLoading","clearInterval","src","className","alt","Component","connect","loading","getLoadingShow","dispatch","show","type","doc","getZodiac","month","day","con","substr","ZODIAC","find","item","name","startsWith","key","ZodiacPage","asyncComponent","ZodiacDescPage","MainComponent","handleToDefault","console","log","history","menu","setCalendar","now","Date","getMonth","getDate","zodiac","push","pathname","handleToHome","handleShowCal","showCalendar","calDay","selectedDate","prevProps","Fragment","onClick","style","width","marginBottom","cursor","MainPng","MyPng","path","render","closeCalendar","Loading","getSelectedDate","getCurMenu","date"],"mappings":"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","file":"static/js/3.b4b0eedd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './loading.less';\r\nimport { connect } from 'react-redux';\r\nimport { getLoadingShow } from 'store/module/loading';\r\n\r\nconst FPS = 25;\r\n\r\nclass LoadingComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            dirIndex: window.dirIndex || 0\r\n        }\r\n   }\r\n   componentDidMount() {\r\n      this.anima = window.setInterval(()=>{\r\n          let dirIndex = this.state.dirIndex;\r\n          dirIndex++;\r\n          this.setState({dirIndex})\r\n          if(dirIndex === 55) {\r\n              if(window.changePage) {\r\n                window.dirIndex = dirIndex;\r\n                window.changePage()\r\n              }\r\n          }\r\n          if(dirIndex>76) {\r\n            window.dirIndex = 0;\r\n            this.props.toggleLoading(false)\r\n          } \r\n      }, 1000/FPS);\r\n   }\r\n\r\n   componentWillUnmount() {\r\n        window.clearInterval(this.anima);\r\n   }\r\n\r\n   render() {\r\n       return (\r\n           <img src={`image/loading/loading${this.state.dirIndex}.png`} className=\"loading-root\" alt=\"\"/>\r\n       )\r\n   }\r\n}\r\n\r\nexport default connect(state => ({\r\n    loading: getLoadingShow(state)\r\n  }),\r\n  dispatch => ({\r\n      toggleLoading: (show) => dispatch({ type: \"LOADING_SHOW\", doc: { show } })\r\n  })\r\n)(LoadingComponent);","export default __webpack_public_path__ + \"static/media/btn_my.ccc5906f.png\";","import { ZODIAC } from 'utils/global';\r\n\r\n//根据生日的月份和日期，计算星座。\r\nfunction getZodiac(month, day){\r\n    let s =  \"摩羯水瓶双鱼白羊金牛双子巨蟹狮子处女天秤天蝎射手摩羯\"\r\n    let arr = [20, 19, 21, 20, 21, 22, 23, 23, 23, 24, 23, 22]\r\n    let con = s.substr(month*2-(day<arr[month-1]?2:0), 2)\r\n    let zodiac = ZODIAC.find( item => item.name.startsWith(con))\r\n    return zodiac\r\n}\r\n\r\n//5分钟未操作\r\nvar optInterval = null;\r\nfunction OptInterval(callback) {\r\n  var count = 0;\r\n  var outTime = 5; //分钟\r\n  function go() {\r\n      count++;\r\n    //   console.log(count)\r\n      if (count >= outTime * 60) {\r\n        count = 0\r\n        callback()\r\n      }\r\n  }\r\n  //页面倒计时\r\n  optInterval = setInterval(go, 1000);\r\n  //监听鼠标\r\n  var x;\r\n  var y;\r\n  document.onmousemove = function(event) {\r\n      /* Act on the event */\r\n      var x1 = event.clientX;\r\n      var y1 = event.clientY;\r\n      if (x !== x1 || y !== y1) {\r\n          count = 0;\r\n      }\r\n      x = x1;\r\n      y = y1;\r\n  };\r\n  document.ontouchmove = function(event) {\r\n    /* Act on the event */\r\n    var x1 = event.clientX;\r\n    var y1 = event.clientY;\r\n    if (x !== x1 || y !== y1) {\r\n        count = 0;\r\n    }\r\n    x = x1;\r\n    y = y1;\r\n};\r\n  document.ontouchstart = function(event) {\r\n      count = 0;\r\n  };\r\n}\r\nfunction clearOptInterval() {\r\n  if(optInterval) {\r\n    clearInterval(optInterval);\r\n    optInterval = null;\r\n  }\r\n  document.onmousemove = null\r\n  document.ontouchmove = null\r\n  document.ontouchstart = null\r\n}\r\n\r\nexport {\r\n    getZodiac,\r\n    OptInterval,\r\n    clearOptInterval\r\n}","export const ZODIAC = [\r\n    {\r\n        name: \"白羊座 ARIES\",\r\n        key: \"aries\",\r\n        day: \"03/21-04/19\"\r\n    },\r\n    {\r\n        name: \"金牛座 TAURUS\",\r\n        key: \"taurus\",\r\n        day: \"04/20-05/20\"\r\n    },\r\n    {\r\n        name: \"双子座 GEMINI\",\r\n        key: \"gemini\",\r\n        day: \"05/21-06/21\"\r\n    },\r\n    {\r\n        name: \"巨蟹座 CANCER\",\r\n        key: \"cancer\",\r\n        day: \"06/22-07/22\"\r\n    },\r\n    {\r\n        name: \"狮子座 LEO\",\r\n        key: \"leo\",\r\n        day: \"07/23-08/22\"\r\n    },\r\n    {\r\n        name: \"处女座 VIRGO\",\r\n        key: \"virgo\",\r\n        day: \"08/23-09/22\"\r\n    },\r\n    {\r\n        name: \"天秤座 LIBRA\",\r\n        key: \"libra\",\r\n        day: \"09/23-10/23\"\r\n    },\r\n    {\r\n        name: \"天蝎座 SCORPIO\",\r\n        key: \"scorpio\",\r\n        day: \"10/24-11/22\"\r\n    },\r\n    {\r\n        name: \"射手座 SAGITTARIUS\",\r\n        key: \"sagittarius\",\r\n        day: \"11/23-12/21\"\r\n    },\r\n    {\r\n        name: \"摩羯座 CAPRICORN\",\r\n        key: \"capricorn\",\r\n        day: \"12/22-01/19\"\r\n    },\r\n    {\r\n        name: \"水瓶座 AQUARIUS\",\r\n        key: \"aquarius\",\r\n        day: \"01/20-02/18\"\r\n    },\r\n    {\r\n        name: \"双鱼座 PISCES\",\r\n        key: \"pisces\",\r\n        day: \"02/19-03/20\"\r\n    }\r\n]","export default __webpack_public_path__ + \"static/media/btn_main.7acc2618.png\";","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport asyncComponent from \"components/AsyncComponent\";\r\nimport \"./main.less\"\r\nimport MainPng from \"assets/img/btn_main.png\";\r\nimport MyPng from \"assets/img/btn_my.png\";\r\nimport Loading from 'views/Loading/Loading';\r\nimport { connect } from 'react-redux';\r\nimport { getLoadingShow } from 'store/module/loading';\r\nimport { getSelectedDate } from 'store/module/calendar';\r\nimport { getCurMenu } from 'store/module/menu';\r\nimport { getZodiac } from 'utils/general';\r\n\r\nconst ZodiacPage = asyncComponent(() => import('views/Zodiac/Zodiac'));\r\nconst ZodiacDescPage = asyncComponent(() => import('views/ZodiacDesc/ZodiacDesc'));\r\n\r\nclass MainComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showCalendar: false,\r\n            calDay: \"\"\r\n        }\r\n   }\r\n   \r\n   componentDidMount() {\r\n       const { history, menu, selectedDate } = this.props;\r\n       if(menu) {\r\n         history.push(`/main/${menu}`)\r\n       }\r\n       if(selectedDate) {\r\n            this.setState({calDay: selectedDate.day})\r\n       } else {\r\n            this.setState({calDay: new Date().getDate()})\r\n       }\r\n    //    OptInterval(this.handleToDefault)\r\n   }\r\n\r\n   componentWillUnmount() {\r\n    //   clearOptInterval()\r\n   }\r\n\r\n   componentDidUpdate(prevProps) {\r\n       if(prevProps.selectedDate !== this.props.selectedDate) {\r\n         this.setState({calDay: this.props.selectedDate.day})\r\n       }\r\n   }\r\n\r\n   handleToDefault = () => {\r\n       console.log(\"handleToDefault\")\r\n      const { history, menu, setCalendar } = this.props;\r\n      if(menu === \"zodiac\") {\r\n        let now = new Date()\r\n        let month = now.getMonth() + 1\r\n        let day = now.getDate()\r\n        let zodiac = getZodiac(month, day)\r\n        setCalendar({month, day})\r\n        zodiac = zodiac?zodiac:{}\r\n        history.push({pathname:\"/main/zodiacdesc\", key: zodiac.key});\r\n      }\r\n   }\r\n\r\n   handleToHome = () => {\r\n       this.props.toggleLoading(true)\r\n       window.changePage = ()=>{\r\n          this.props.history.push(\"/home\")\r\n        }\r\n   }\r\n\r\n    handleShowCal = () => {\r\n        let showCalendar = !this.state.showCalendar\r\n        this.setState({showCalendar})\r\n    }\r\n\r\n   render() {\r\n       const { showCalendar, calDay } = this.state;\r\n\r\n       return (\r\n           <React.Fragment>\r\n                <div className=\"main-root\">\r\n                    <div className=\"btn\">\r\n                        <img onClick={this.handleToHome} style={{width: \"84.5px\",  marginBottom: \"42px\", cursor: \"pointer\"}} src={MainPng} alt=\"\" />\r\n                        {\r\n                            !showCalendar &&\r\n                            <div className=\"btn-cal\" style={{cursor: \"pointer\"}} onClick={this.handleShowCal}>\r\n                                <img src={MyPng} alt=\"\" />\r\n                                <div className=\"text\">{calDay}</div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <Switch>\r\n                            <Route\r\n                                path=\"/main/zodiac\"\r\n                                render={props => { return <ZodiacPage {...props} showCalendar={showCalendar} closeCalendar={this.handleShowCal}/>}}/>\r\n                            <Route\r\n                                path=\"/main/zodiacdesc\"\r\n                                render={props => { return <ZodiacDescPage {...props} showCalendar={showCalendar} closeCalendar={this.handleShowCal}/>}}/>\r\n                        </Switch>\r\n                </div>\r\n                { this.props.loading && <Loading /> }\r\n          </React.Fragment>\r\n       )\r\n   }\r\n}\r\n\r\nexport default connect(state => ({\r\n    loading: getLoadingShow(state),\r\n    selectedDate: getSelectedDate(state),\r\n    menu: getCurMenu(state)\r\n  }),\r\n  dispatch => ({\r\n    toggleLoading: (show) => dispatch({ type: \"LOADING_SHOW\", doc: { show } }),\r\n    setCalendar: (date) => dispatch({ type: \"SET_CALENDAR\", doc: { date } })\r\n  })\r\n)(MainComponent);"],"sourceRoot":""}